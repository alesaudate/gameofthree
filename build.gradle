buildscript {
	dependencies {
		classpath "io.spring.javaformat:spring-javaformat-gradle-plugin:0.0.27"
	}

	ext {
		coverageLimits = [
				'instruction': 100.0,
				'branch': 100.0,
				'line': 100.0,
				'complexity': 100.0,
				'method coverage': 100.0,
				'class': 100.0
		]
	}
}
plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.javaformat'
apply from: "${rootProject.rootDir}/gradle/jacoco.gradle"


group = 'com.takeaway'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.apache.commons:commons-lang3:3.11'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'

	testCompile 'com.github.javafaker:javafaker:0.12'
	testCompile 'io.rest-assured:spring-mock-mvc:4.1.1'
	testImplementation 'com.tngtech.archunit:archunit:0.15.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
}

test {
	useJUnitPlatform()
}
